{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yusuke/naist/intern/cookpad/sakai-spring-internship-2021-recipe-site/pages/index.tsx\",\n    _this = this;\n\nimport React from 'react';\nimport Link from \"next/link\";\nimport { RecipeLink } from '../components/RecipeLink';\nimport { SearchBar } from '../components/SearchBar';\nimport { useRouter } from 'next/router';\n\nvar Home = function Home(props) {\n  var recipes = props.response.recipes;\n  var prev, next;\n  if (props.response.links.prev !== undefined) prev = props.response.links.prev.split(\"=\").pop();\n  if (props.response.links.next !== undefined) next = props.response.links.next.split(\"=\").pop();\n  var router = useRouter; //const [number, setNumber] = useState<number>(1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Recipe Site\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 8\n    }, _this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this), recipes.map(function (recipe, i) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(RecipeLink, {\n          recipe: recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 34\n        }, _this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, _this);\n    }), function () {\n      if (prev !== undefined) return /*#__PURE__*/_jsxDEV(Link, {\n        href: {\n          pathname: '/',\n          query: {\n            page: prev\n          }\n        },\n        children: \"PREV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 45\n      }, _this);\n    }(), function () {\n      if (next !== undefined) return /*#__PURE__*/_jsxDEV(Link, {\n        href: {\n          pathname: '/',\n          query: {\n            page: next\n          }\n        },\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 45\n      }, _this);\n    }()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Home;\nexport var __N_SSP = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/yusuke/naist/intern/cookpad/sakai-spring-internship-2021-recipe-site/pages/index.tsx"],"names":["React","Link","RecipeLink","SearchBar","useRouter","Home","props","recipes","response","prev","next","links","undefined","split","pop","router","map","recipe","i","pathname","query","page"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AAKA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAOA,IAAMC,IAAqB,GAAG,SAAxBA,IAAwB,CAACC,KAAD,EAAW;AACvC,MAAMC,OAAO,GAAGD,KAAK,CAACE,QAAN,CAAeD,OAA/B;AACA,MAAIE,IAAJ,EAAUC,IAAV;AACA,MAAGJ,KAAK,CAACE,QAAN,CAAeG,KAAf,CAAqBF,IAArB,KAA8BG,SAAjC,EAA4CH,IAAI,GAAGH,KAAK,CAACE,QAAN,CAAeG,KAAf,CAAqBF,IAArB,CAA0BI,KAA1B,CAAgC,GAAhC,EAAqCC,GAArC,EAAP;AAC5C,MAAGR,KAAK,CAACE,QAAN,CAAeG,KAAf,CAAqBD,IAArB,KAA8BE,SAAjC,EAA4CF,IAAI,GAAGJ,KAAK,CAACE,QAAN,CAAeG,KAAf,CAAqBD,IAArB,CAA0BG,KAA1B,CAAgC,GAAhC,EAAqCC,GAArC,EAAP;AAE5C,MAAMC,MAAM,GAAGX,SAAf,CANuC,CAOvC;;AACA,sBACE;AAAA,4BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADH,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,aAFF,EAIEG,OAAO,CAACS,GAAR,CAAY,UAACC,MAAD,EAASC,CAAT;AAAA,0BACE;AAAA,+BAAa,QAAC,UAAD;AAAY,UAAA,MAAM,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA;AAAb,SAAUC,CAAV;AAAA;AAAA;AAAA;AAAA,eADF;AAAA,KAAZ,CAJF,EASO,YAAM;AACH,UAAGT,IAAI,KAAKG,SAAZ,EAAuB,oBAAO,QAAC,IAAD;AAC9B,QAAA,IAAI,EAAI;AACJO,UAAAA,QAAQ,EAAE,GADN;AAEJC,UAAAA,KAAK,EAAE;AAACC,YAAAA,IAAI,EAAEZ;AAAP;AAFH,SADsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAM1B,KAPD,EATN,EAoBO,YAAM;AACH,UAAGC,IAAI,KAAKE,SAAZ,EAAuB,oBAAO,QAAC,IAAD;AAC9B,QAAA,IAAI,EAAI;AACJO,UAAAA,QAAQ,EAAE,GADN;AAEJC,UAAAA,KAAK,EAAE;AAACC,YAAAA,IAAI,EAAEX;AAAP;AAFH,SADsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAM1B,KAPD,EApBN;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAiCD,CAzCD;;KAAML,I;;AA6DN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport {useEffect, useState,FC} from 'react'\nimport Link from \"next/link\";\nimport { GetServerSideProps, NextPage } from \"next\";\nimport {getAllRecipe} from \"../lib/get_all_recipes\"\nimport type {Recipe} from '../types/recipe'\nimport type {Response} from '../lib/get_all_recipes'\nimport {RecipeLink} from '../components/RecipeLink'\nimport { SearchBar } from '../components/SearchBar';\nimport { useRouter } from 'next/router';\nimport lodash from 'lodash';\n\ntype Props = {\n  response: Response\n};\n\nconst Home: NextPage<Props> = (props) => {\n  const recipes = props.response.recipes;\n  let prev, next;\n  if(props.response.links.prev !== undefined) prev = props.response.links.prev.split(\"=\").pop();\n  if(props.response.links.next !== undefined) next = props.response.links.next.split(\"=\").pop();\n  \n  const router = useRouter;\n  //const [number, setNumber] = useState<number>(1);\n  return (\n    <div>\n       <h1>My Recipe Site</h1>\n      <SearchBar />\n      {\n      recipes.map((recipe, i) => (\n                    <div key={i}><RecipeLink recipe={recipe} /></div>\n                ))\n      }\n      {\n          (() => {\n              if(prev !== undefined) return <Link\n              href = {{\n                  pathname: '/',\n                  query: {page: prev}\n              }}\n              >PREV</Link>\n          })()\n      }\n\n      {\n          (() => {\n              if(next !== undefined) return <Link\n              href = {{\n                  pathname: '/',\n                  query: {page: next}\n              }}\n              >NEXT</Link>\n          })()\n      }\n      \n    </div>\n  )\n};\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const page = Number(context.query?.page);\n\n  if(isNaN(page)){\n    return {\n      props: {\n        response: await getAllRecipe(1, process.env.API_KEY)\n      },\n    }\n  }else{\n    return {\n      props:{\n        response: await getAllRecipe(page, process.env.API_KEY)\n      }\n    }\n  };\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}